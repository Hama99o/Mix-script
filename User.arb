describe "#active_subscriptions" do
  let(:user) { create(:user) }
  let(:subscription_weekend) { create(:subscription, name: 'Weekend', users: [user]) }
  let(:subscription_weekdays) { create(:subscription, name: 'Weekdays', users: [user]) }

  before do
    user.subscriptions_users.find_by_subscription_id(subscription_weekend.id).update(closed_at: Time.now)
    subscription_weekdays
  end

  it "returns active subscriptions" do
    expect(user.active_subscriptions).to eq([subscription_weekdays])
    expect(user.active_subscriptions).not_to eq([subscription_weekend])
  end
end

describe "#active_subscription_ids" do
  let(:user) { create(:user) }
  let(:subscription_weekend) { create(:subscription, name: 'Weekend', users: [user]) }
  let(:subscription_weekdays) { create(:subscription, name: 'Weekdays', users: [user]) }

  before do
    user.subscriptions_users.find_by_subscription_id(subscription_weekend.id).update(closed_at: Time.now)
    subscription_weekdays
  end

  it "returns active subscriptions ids" do
    expect(user.active_subscription_ids).to eq([subscription_weekdays.id])
    expect(user.active_subscription_ids).not_to eq([subscription_weekend.id])
  end
end